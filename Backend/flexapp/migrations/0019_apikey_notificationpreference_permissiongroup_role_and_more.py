# Generated by Django 5.1.1 on 2025-09-17 19:18

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('flexapp', '0018_achievementcategory_notificationtemplate_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('key', models.CharField(default=uuid.uuid4, max_length=64, unique=True)),
                ('allowed_ips', models.TextField(blank=True, help_text='Comma-separated IP addresses')),
                ('rate_limit', models.IntegerField(default=1000, help_text='Requests per hour')),
                ('total_requests', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('achievement_notifications', models.BooleanField(default=True)),
                ('deadline_notifications', models.BooleanField(default=True)),
                ('security_notifications', models.BooleanField(default=True)),
                ('system_notifications', models.BooleanField(default=True)),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest'), ('never', 'Never')], default='immediate', max_length=20)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rank', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('recognition', models.CharField(blank=True, choices=[('participation', 'Participation'), ('appreciation', 'Appreciation'), ('recommendation', 'Recommendation'), ('completion', 'Completion'), ('recognition', 'Recognition'), ('rankcard', 'Rankcard')], max_length=20)),
                ('event_type', models.CharField(choices=[('hackathon', 'Hackathon'), ('quiz', 'Quiz'), ('workshop', 'Workshop/Webinar'), ('techfest', 'Tech Fest'), ('presentation', 'Presentation'), ('others', 'Others')], default='others', max_length=20)),
                ('fest_name', models.CharField(blank=True, max_length=100)),
                ('course_provider', models.CharField(blank=True, max_length=100)),
                ('domain', models.CharField(blank=True, max_length=100)),
                ('duration', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('academic', 'Academic Management'), ('student', 'Student Management'), ('faculty', 'Faculty Management'), ('achievement', 'Achievement Management'), ('report', 'Report Generation'), ('system', 'System Administration'), ('security', 'Security & Audit')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('role_type', models.CharField(choices=[('student', 'Student'), ('faculty', 'Faculty'), ('coordinator', 'Department Coordinator'), ('hod', 'Head of Department'), ('admin', 'Administrator'), ('super_admin', 'Super Administrator'), ('guest', 'Guest User')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.CharField(blank=True, max_length=20, null=True)),
                ('sections', models.CharField(blank=True, help_text='Comma-separated sections', max_length=100)),
                ('hierarchy_level', models.IntegerField(default=5)),
            ],
            options={
                'ordering': ['hierarchy_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SecurityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login_success', 'Successful Login'), ('login_failed', 'Failed Login'), ('logout', 'User Logout'), ('permission_denied', 'Permission Denied'), ('suspicious_activity', 'Suspicious Activity'), ('password_change', 'Password Changed'), ('role_change', 'Role Assignment Changed'), ('data_export', 'Data Export'), ('admin_action', 'Administrative Action')], max_length=30)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=255)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('request_data', models.JSONField(blank=True, default=dict)),
                ('response_status', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=20, null=True)),
                ('sections', models.CharField(blank=True, help_text='Comma-separated sections', max_length=100)),
                ('academic_year', models.CharField(blank=True, max_length=10, null=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('location', models.CharField(blank=True, max_length=100)),
                ('device_info', models.JSONField(default=dict)),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_suspicious', models.BooleanField(default=False)),
            ],
        ),
        migrations.RenameField(
            model_name='certificate',
            old_name='course_provider',
            new_name='certificate_id',
        ),
        migrations.RenameField(
            model_name='enhancednotification',
            old_name='is_sent',
            new_name='auto_delete_after_read',
        ),
        migrations.RenameField(
            model_name='enhancednotification',
            old_name='related_object_id',
            new_name='object_id',
        ),
        migrations.RenameField(
            model_name='notificationtemplate',
            old_name='subject_template',
            new_name='title_template',
        ),
        migrations.RemoveField(
            model_name='auditlog',
            name='action',
        ),
        migrations.RemoveField(
            model_name='auditlog',
            name='changes',
        ),
        migrations.RemoveField(
            model_name='auditlog',
            name='faculty',
        ),
        migrations.RemoveField(
            model_name='auditlog',
            name='model_name',
        ),
        migrations.RemoveField(
            model_name='certificate',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='certificate',
            name='event_type',
        ),
        migrations.RemoveField(
            model_name='certificate',
            name='fest_name',
        ),
        migrations.RemoveField(
            model_name='certificate',
            name='rank',
        ),
        migrations.RemoveField(
            model_name='certificate',
            name='recognition',
        ),
        migrations.RemoveField(
            model_name='certificate',
            name='technologies',
        ),
        migrations.RemoveField(
            model_name='enhancednotification',
            name='related_object_type',
        ),
        migrations.RemoveField(
            model_name='enhancednotification',
            name='scheduled_for',
        ),
        migrations.RemoveField(
            model_name='notificationtemplate',
            name='notification_type',
        ),
        migrations.AddField(
            model_name='auditlog',
            name='action_type',
            field=models.CharField(choices=[('user_login', 'User Login'), ('user_logout', 'User Logout'), ('profile_update', 'Profile Updated'), ('password_change', 'Password Changed'), ('achievement_created', 'Achievement Created'), ('achievement_updated', 'Achievement Updated'), ('achievement_approved', 'Achievement Approved'), ('achievement_rejected', 'Achievement Rejected'), ('project_created', 'Project Created'), ('project_updated', 'Project Updated'), ('certificate_uploaded', 'Certificate Uploaded'), ('certificate_verified', 'Certificate Verified'), ('user_created', 'User Created'), ('user_updated', 'User Updated'), ('user_deleted', 'User Deleted'), ('role_assigned', 'Role Assigned'), ('role_removed', 'Role Removed'), ('permission_granted', 'Permission Granted'), ('permission_revoked', 'Permission Revoked'), ('data_exported', 'Data Exported'), ('bulk_upload', 'Bulk Data Upload'), ('report_generated', 'Report Generated'), ('suspicious_activity', 'Suspicious Activity'), ('failed_login', 'Failed Login Attempt'), ('session_expired', 'Session Expired'), ('api_access', 'API Access'), ('backup_created', 'Backup Created'), ('system_maintenance', 'System Maintenance'), ('configuration_change', 'Configuration Changed')], default='Null', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='auditlog',
            name='additional_data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='new_values',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='object_repr',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='old_values',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='request_method',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='request_path',
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='risk_level',
            field=models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='low', max_length=20),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='session_key',
            field=models.CharField(blank=True, max_length=40),
        ),
        migrations.AddField(
            model_name='certificate',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='certificate',
            name='validity_period',
            field=models.CharField(blank=True, help_text='e.g., 2 years, Lifetime', max_length=50),
        ),
        migrations.AddField(
            model_name='certificate',
            name='verification_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flexapp.faculty'),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='action_text',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='action_url',
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='auto_delete_days',
            field=models.IntegerField(default=30, help_text='Days after which to auto-delete'),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='context_data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='email_notification',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='in_app_notification',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='push_notification',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='send_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='sms_notification',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='enhancednotification',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flexapp.notificationtemplate'),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='available_variables',
            field=models.TextField(blank=True, help_text='Comma-separated list of available variables'),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='email_body',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='email_html_body',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='email_subject',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='send_email',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='send_push',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='send_sms',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='sms_template',
            field=models.CharField(blank=True, max_length=160),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='template_type',
            field=models.CharField(choices=[('achievement_approved', 'Achievement Approved'), ('achievement_rejected', 'Achievement Rejected'), ('achievement_submitted', 'Achievement Submitted'), ('project_deadline', 'Project Deadline Reminder'), ('certificate_verified', 'Certificate Verified'), ('profile_incomplete', 'Profile Incomplete'), ('system_maintenance', 'System Maintenance'), ('security_alert', 'Security Alert'), ('welcome', 'Welcome Message'), ('custom', 'Custom Template')], default='type', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='auditlog',
            name='description',
            field=models.TextField(default='nothing'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='auditlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='auditlog',
            name='user_agent',
            field=models.TextField(blank=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='certificate',
            name='domain',
            field=models.CharField(blank=True, help_text='e.g., Machine Learning, Web Development', max_length=100),
        ),
        migrations.AlterField(
            model_name='enhancednotification',
            name='notification_type',
            field=models.CharField(choices=[('info', 'Information'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('achievement', 'Achievement Related'), ('deadline', 'Deadline Reminder'), ('security', 'Security Alert'), ('system', 'System Notification')], default='info', max_length=20),
        ),
        migrations.AlterField(
            model_name='enhancednotification',
            name='priority',
            field=models.CharField(choices=[('low', 'Low Priority'), ('normal', 'Normal Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='normal', max_length=10),
        ),
        migrations.AlterField(
            model_name='enhancednotification',
            name='recipient_faculty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='flexapp.faculty'),
        ),
        migrations.AlterField(
            model_name='enhancednotification',
            name='recipient_student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='flexapp.student'),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'timestamp'], name='flexapp_aud_user_id_50f3ea_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action_type', 'timestamp'], name='flexapp_aud_action__14c869_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['risk_level', 'timestamp'], name='flexapp_aud_risk_le_b4733b_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancednotification',
            index=models.Index(fields=['recipient_student', 'is_read', 'created_at'], name='flexapp_enh_recipie_6b5084_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancednotification',
            index=models.Index(fields=['recipient_faculty', 'is_read', 'created_at'], name='flexapp_enh_recipie_b2b9e1_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancednotification',
            index=models.Index(fields=['status', 'send_at'], name='flexapp_enh_status_75db21_idx'),
        ),
        migrations.AddField(
            model_name='apikey',
            name='permissions',
            field=models.ManyToManyField(blank=True, to='auth.permission'),
        ),
        migrations.AddField(
            model_name='apikey',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationpreference',
            name='technologies',
            field=models.ManyToManyField(blank=True, to='flexapp.technology'),
        ),
        migrations.AddField(
            model_name='notificationpreference',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='permissiongroup',
            name='permissions',
            field=models.ManyToManyField(to='auth.permission'),
        ),
        migrations.AddField(
            model_name='role',
            name='permissions',
            field=models.ManyToManyField(blank=True, to='auth.permission'),
        ),
        migrations.AddField(
            model_name='securitylog',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userrole',
            name='assigned_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userrole',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flexapp.role'),
        ),
        migrations.AddField(
            model_name='userrole',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usersession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role', 'department')},
        ),
    ]
