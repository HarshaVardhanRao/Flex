# Generated by Django 5.1.1 on 2025-09-17 17:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('flexapp', '0017_coordinatorrole_can_view_placement'),
    ]

    operations = [
        migrations.CreateModel(
            name='AchievementCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('points', models.IntegerField(default=10, help_text='Points awarded for this category')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Achievement Categories',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('notification_type', models.CharField(choices=[('achievement_approved', 'Achievement Approved'), ('achievement_rejected', 'Achievement Rejected'), ('deadline_reminder', 'Deadline Reminder'), ('profile_incomplete', 'Profile Incomplete'), ('new_assignment', 'New Assignment'), ('system_maintenance', 'System Maintenance'), ('placement_update', 'Placement Update')], max_length=30)),
                ('subject_template', models.CharField(max_length=200)),
                ('message_template', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='admission_year',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='career_interests',
            field=models.TextField(blank=True, help_text='Comma-separated interests', null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='current_cgpa',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='graduation_status',
            field=models.CharField(choices=[('current', 'Current Student'), ('graduated', 'Graduated'), ('dropped', 'Dropped Out')], default='current', max_length=20),
        ),
        migrations.AddField(
            model_name='student',
            name='guardian_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='guardian_phone',
            field=models.CharField(blank=True, max_length=15, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='is_active_student',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='student',
            name='last_profile_update',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='student',
            name='linkedin_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='personal_email',
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='portfolio_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='profile_completion_percentage',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='student',
            name='soft_skills',
            field=models.TextField(blank=True, help_text='Comma-separated skills', null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='technical_skills',
            field=models.TextField(blank=True, help_text='Comma-separated skills', null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='total_credits',
            field=models.IntegerField(default=0),
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('achievement_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('under_review', 'Under Review')], default='pending', max_length=20)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('faculty_comments', models.TextField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='achievements/')),
                ('points_awarded', models.IntegerField(default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_method', models.CharField(blank=True, max_length=100, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_achievements', to='flexapp.faculty')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flexapp.faculty')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='flexapp.student')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_achievements', to='flexapp.student')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flexapp.achievementcategory')),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='ApprovalWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('certificate', 'Certificate'), ('project', 'Project'), ('achievement', 'Achievement'), ('placement', 'Placement'), ('publication', 'Publication')], max_length=20)),
                ('object_id', models.PositiveIntegerField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('current_status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('under_review', 'Under Review')], default='pending', max_length=20)),
                ('workflow_history', models.JSONField(default=list)),
                ('student_comments', models.TextField(blank=True, null=True)),
                ('reviewer_comments', models.TextField(blank=True, null=True)),
                ('approver_comments', models.TextField(blank=True, null=True)),
                ('expected_review_date', models.DateTimeField(blank=True, null=True)),
                ('expected_approval_date', models.DateTimeField(blank=True, null=True)),
                ('is_overdue', models.BooleanField(default=False)),
                ('final_approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='final_approvals', to='flexapp.faculty')),
                ('initial_reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initial_reviews', to='flexapp.faculty')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flexapp.student')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('view', 'View'), ('login', 'Login'), ('logout', 'Logout'), ('approve', 'Approve'), ('reject', 'Reject'), ('upload', 'Upload'), ('download', 'Download'), ('export', 'Export')], max_length=20)),
                ('model_name', models.CharField(max_length=50)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_audit_logs', to='flexapp.faculty')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='flexapp.student')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='EnhancedNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('notification_type', models.CharField(max_length=30)),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('scheduled_for', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient_faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to='flexapp.faculty')),
                ('recipient_student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to='flexapp.student')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AcademicPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=10)),
                ('year', models.IntegerField()),
                ('sgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('credits_earned', models.IntegerField(default=0)),
                ('total_credits', models.IntegerField(default=0)),
                ('attendance_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('disciplinary_actions', models.TextField(blank=True, null=True)),
                ('class_rank', models.IntegerField(blank=True, null=True)),
                ('department_rank', models.IntegerField(blank=True, null=True)),
                ('subjects_passed', models.IntegerField(default=0)),
                ('subjects_failed', models.IntegerField(default=0)),
                ('backlogs', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_records', to='flexapp.student')),
            ],
            options={
                'ordering': ['-year', '-semester'],
                'unique_together': {('student', 'semester', 'year')},
            },
        ),
    ]
