"""
Django settings for flex project.

Generated by 'django-admin startproject' using Django 5.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
# from dotenv import load_dotenv
# load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=%=fmc@(#w-d+)9t39j()zo=qozrhr+r!upx67cz(tz@i+^=1n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

LOGIN_URL = '/'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'flexapp',
]
EMAIL_BACKEND =  'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST =  str(os.getenv("EMAIL_HOST"))
EMAIL_PORT = str(os.getenv("EMAIL_PORT"))
EMAIL_USE_TLS =  str(os.getenv("EMAIL_USE_TLS"))
EMAIL_HOST_USER =  str(os.getenv("EMAIL_HOST_USER"))
EMAIL_HOST_PASSWORD =  str(os.getenv("EMAIL_HOST_PASSWORD"))
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'flexapp.middleware.SecurityMiddleware',
    'flexapp.middleware.AuditLogMiddleware',
    # 'flexapp.middleware.RoleBasedAccessMiddleware',  # Temporarily disabled to fix redirect loop
    'flexapp.middleware.SessionTimeoutMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'flex.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'flex.wsgi.application'

AUTHENTICATION_BACKENDS = [
    'flexapp.auth_backends.StudentBackend',   # Custom backend for Student model
    'flexapp.auth_backends.FacultyBackend',
    'django.contrib.auth.backends.ModelBackend',
]


# AUTH_USER_MODEL = 'flexapp.student'
# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


try:
    # Try PostgreSQL
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'flex',
            'USER': 'mahi',
            'PASSWORD': 'mahi',
            'HOST': 'localhost',
            'PORT': '',
        }
    }

    # Check if PostgreSQL is accessible
    import psycopg2
    conn = psycopg2.connect(
        dbname=DATABASES['default']['NAME'],
        user=DATABASES['default']['USER'],
        password=DATABASES['default']['PASSWORD'],
        host=DATABASES['default']['HOST'],
        port=DATABASES['default']['PORT'],
    )
    conn.close()

except Exception:
    # Fallback to SQLite3 if PostgreSQL fails
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(os.path.dirname(__file__), 'db.sqlite3'),
        }
    }



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS Settings
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

CORS_ALLOW_CREDENTIALS = True

# Allow specific headers
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# Allow specific methods
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# CSRF Settings
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

# If you want to allow all origins (not recommended for production)
# CORS_ALLOW_ALL_ORIGINS = True

# Google Gemini AI Configuration
GEMINI_API_KEY = os.getenv('GEMINI_API_KEY')  # Set this in your environment variables

# FlexOn AI Settings
FLEXON_AI_ENABLED = True
FLEXON_AI_MODEL = 'gemini-pro'
FLEXON_AI_MAX_TOKENS = 4096
FLEXON_AI_TEMPERATURE = 0.3  # Lower temperature for more consistent ORM generation

# Security Settings
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'
SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'

# Session Settings
SESSION_COOKIE_SECURE = not DEBUG  # Use secure cookies in production
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_TIMEOUT = 3600  # 1 hour session timeout

# API Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/hour',
        'user': '1000/hour'
    }
}

# Email Settings for Notifications
DEFAULT_FROM_EMAIL = 'noreply@flexapp.com'

# SMS and Push Notification Settings (configure as needed)
SMS_API_KEY = os.getenv('SMS_API_KEY')
SMS_API_URL = os.getenv('SMS_API_URL')
FCM_SERVER_KEY = os.getenv('FCM_SERVER_KEY')

# Audit Log Settings
AUDIT_LOG_ENABLED = True
AUDIT_LOG_EXCLUDE_PATHS = ['/static/', '/media/', '/admin/jsi18n/']
AUDIT_LOG_EXCLUDE_METHODS = ['OPTIONS']

# Security Log Settings
SECURITY_LOG_ENABLED = True
SECURITY_LOG_FAILED_LOGIN_THRESHOLD = 5
SECURITY_LOG_SUSPICIOUS_ACTIVITY_THRESHOLD = 10

# API Key Settings
API_KEY_EXPIRY_DAYS = 365
API_KEY_RATE_LIMIT_DEFAULT = 1000  # Per hour

